#LyX 1.5.3 created this file. For more info see http://www.lyx.org/
\lyxformat 276
\begin_document
\begin_header
\textclass book
\language english
\inputencoding default
\font_roman bookman
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\float_placement !!h
\paperfontsize 10
\spacing single
\papersize custom
\use_geometry true
\use_amsmath 1
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\paperwidth 8.5in
\paperheight 11in
\leftmargin 1.2in
\topmargin 1in
\rightmargin 0.6in
\bottommargin 0.6in
\secnumdepth 5
\tocdepth 5
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Chapter
Config Files
\end_layout

\begin_layout Section
Files Used for Configuration
\end_layout

\begin_layout Standard
The EMC is configured with human readable text files.
 All of these files can be read and edited in any of the common text file
 editors available with most any Linux distribution.
\begin_inset Foot
status open

\begin_layout Standard
Don't confuse a text editor with a word processor.
 A text editor like gedit or kwrite produce files that are plain text.
 They also produce lines of text that are separated from each other.
 A word processor like Open Office produce files with paragraphs and word
 wrapping and lots of embedded codes that control font size and such.
 A text editor does none of this.
\end_layout

\end_inset

 You'll need to be a bit careful when you edit these files.
 Some mistakes will cause the start up to fail.
 These files are read whenever the software starts up.
 Some of them are read repeatedly while the CNC is running.
 
\end_layout

\begin_layout Standard
Configuration files include
\end_layout

\begin_layout Description
INI
\begin_inset LatexCommand index
name "INI"

\end_inset

 The ini file overrides defaults that are compiled into the EMC code.
 It also provides sections that are read directly by the Hardware Abstraction
 Layer.
\end_layout

\begin_layout Description
HAL
\begin_inset LatexCommand index
name "HAL"

\end_inset

 The HAL files start up process modules and provide linkages between EMC
 signals and specific hardware pins.
\end_layout

\begin_layout Description
VAR
\begin_inset LatexCommand index
name "VAR"

\end_inset

 The var file is a way for the interpreter to save some values from one
 run to the next.
 These values are saved from one run to another but not always saved immediately.
 See the Parameters section of the G Code Manual for information on what
 each parameter is.
\end_layout

\begin_layout Description
TBL
\begin_inset LatexCommand index
name "TBL"

\end_inset

 The tbl file saves tool information.
 See the User Manual Tool File section for more info.
\end_layout

\begin_layout Description
NML
\begin_inset LatexCommand index
name "NML"

\end_inset

 The nml file configures the communication channels used by the EMC.
 It is normally setup to run all of the communication within a single computer
 but can be modified to communicate between several computers.
\end_layout

\begin_layout Description
.emcrc
\begin_inset LatexCommand index
name ".emcrc"

\end_inset

 This file saves user specific information and is created to save the name
 of the directory when the user first selects an EMC configuration.
\begin_inset Foot
status open

\begin_layout Standard
Usually this file is in the users home directory (e.g.
 /home/user/ )
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Items marked 
\series bold
\noun on
(hal)
\series default
\noun default
 are used only by the sample HAL files and are suggested as a good convention.
 Other items are used by EMC directly, and must always have the section
 and item names given.
\end_layout

\begin_layout Chapter
INI File
\end_layout

\begin_layout Section
The INI File Layout
\end_layout

\begin_layout Standard
A typical INI file follows a rather simple layout that includes;
\end_layout

\begin_layout Itemize
comments.
\end_layout

\begin_layout Itemize
sections, 
\end_layout

\begin_layout Itemize
variables.
\end_layout

\begin_layout Standard
Each of these elements is separated on single lines.
 Each end of line or newline character creates a new element.
 
\end_layout

\begin_layout Subsection
Comments
\begin_inset LatexCommand index
name "comments"

\end_inset


\end_layout

\begin_layout Standard
A comment line is started with a ; or a # mark.
 When the ini reader sees either of these marks at the start a line, the
 rest of the line is ignored by the software.
 Comments can be used to describe what some INI element will do.
 
\end_layout

\begin_layout LyX-Code
; This is my little mill configuration file.
\end_layout

\begin_layout LyX-Code
; I set it up on January 12, 2006
\end_layout

\begin_layout Standard
Comments can also be used to select between several values of a single variable.
 
\end_layout

\begin_layout LyX-Code
DISPLAY = axis
\end_layout

\begin_layout LyX-Code
# DISPLAY = touchy
\end_layout

\begin_layout Standard
In this list, the DISPLAY variable will be set to axis because the other
 one is commented out.
 If someone carelessly edits a list like this and leaves two of the lines
 uncommented, the first one encountered will be used.
\end_layout

\begin_layout Standard
Note that inside a variable, the "#" and ";" characters do not denote comments:
\end_layout

\begin_layout LyX-Code
INCORRECT = value     # and a comment
\end_layout

\begin_layout LyX-Code
# Correct Comment
\end_layout

\begin_layout LyX-Code
CORRECT = value
\end_layout

\begin_layout Subsection
Sections
\end_layout

\begin_layout Standard
Related parts of an ini file are separated into sections.
 A section line looks like [THIS_SECTION].
 The name of the section is enclosed in brackets.
 The order of sections is unimportant.
 The following sections are used by EMC:
\end_layout

\begin_layout Itemize
[EMC] general information (
\begin_inset LatexCommand ref
reference "sub:[EMC]-section"

\end_inset

)
\end_layout

\begin_layout Itemize
[DISPLAY] settings related to the graphical user interface (
\begin_inset LatexCommand ref
reference "sub:[DISPLAY]-section"

\end_inset

)
\end_layout

\begin_layout Itemize
[FILTER] settings input filter programs ([sub:[FILTER]-Section])
\end_layout

\begin_layout Itemize
[RS274NGC] settings used by the g-code interpreter (
\begin_inset LatexCommand ref
reference "sub:[RS274NGC]-section"

\end_inset

)
\end_layout

\begin_layout Itemize
[EMCMOT] settings used by the real time motion controller (
\begin_inset LatexCommand ref
reference "sub:[EMCMOT]-section"

\end_inset

)
\end_layout

\begin_layout Itemize
[HAL] specifies .hal files (
\begin_inset LatexCommand ref
reference "sub:[HAL]-section"

\end_inset

)
\end_layout

\begin_layout Itemize
[TASK] settings used by the task controller (
\begin_inset LatexCommand ref
reference "sub:[TASK]-section"

\end_inset

)
\end_layout

\begin_layout Itemize
[TRAJ] additional settings used by the real time motion controller (
\begin_inset LatexCommand ref
reference "sub:[TRAJ]-section"

\end_inset

)
\end_layout

\begin_layout Itemize
[AXIS_0] ...
 [AXIS_n] individual axis variables (
\begin_inset LatexCommand ref
reference "sub:[AXIS]-section"

\end_inset

)
\end_layout

\begin_layout Itemize
[EMCIO] settings used by the I/O Controller (
\begin_inset LatexCommand ref
reference "sub:[EMCIO]-Section"

\end_inset

)
\end_layout

\begin_layout Itemize
[HALUI] MDI commands used by HALUI.
 See the HALUI chapter for more information (
\begin_inset LatexCommand ref
reference "sub:MDI"

\end_inset

)
\end_layout

\begin_layout Subsection
Variables
\end_layout

\begin_layout Standard
A variable line is made up of a variable name, an equals sign(=), and a
 value.

\color none
 
\color black
Everything from the first non-white space character after the = up to the
 end of the line is passed as the value, so you can embed spaces in string
 symbols if you want to or need to.
 A variable name is often called a keyword.
\end_layout

\begin_layout Standard

\color black
The following sections detail each section of the configuration file, using
 sample values for the configuration lines.
\end_layout

\begin_layout Standard
Some of the variables are used by EMC, and must always use the section names
 and variable names shown.
 Other variables are used only by HAL, and the section names and variable
 names shown are those used in the sample configuration files.
\end_layout

\begin_layout Subsection
Definitions
\end_layout

\begin_layout Description
Machine\InsetSpace ~
Unit The unit of measurement for an axis is determined by the settings
 in the [TRAJ] section.
 A machine unit is equal to one unit as specified by 
\color black
LINEAR_UNITS or ANGULAR_UNITS.
 
\end_layout

\begin_layout Section
\begin_inset LatexCommand label
name "sub:INI-Detail"

\end_inset

Sections
\end_layout

\begin_layout Subsection
[EMC] Section
\color none
 
\color black

\begin_inset LatexCommand label
name "sub:[EMC]-section"

\end_inset


\begin_inset LatexCommand index
name "EMC (inifile section)"

\end_inset


\end_layout

\begin_layout Description

\color black
VERSION\InsetSpace ~

\series bold
=
\series default
\InsetSpace ~

\series bold
$Revision:
\series default
\InsetSpace ~

\series bold
1.3
\series default
\InsetSpace ~

\series bold
$
\series default
\color none
 
\color black
The version number for the INI file.
 The value shown here looks odd because it is automatically updated when
 using the Revision Control System.
 It's a good idea to change this number each time you revise your file.
 If you want to edit this manually just change the number and leave the
 other tags alone.
 
\end_layout

\begin_layout Description

\color black
MACHINE\InsetSpace ~

\series bold
=
\series default
\InsetSpace ~

\series bold
My
\series default
\InsetSpace ~

\series bold
Controller
\series default
\color none
 
\color black
This is the name of the controller, which is printed out at the top of most
 graphical interfaces.
 You can put whatever you want here as long as you make it a single line
 long.
\end_layout

\begin_layout Description
DEBUG\InsetSpace ~
=\InsetSpace ~
0 Debug level 0 means no messages will be printed when EMC is run
 from a terminal.
 Debug flags are usually only useful to developers.
 See src/emc/nml_int/emcglb.h for other settings.
 
\end_layout

\begin_layout Subsection
[DISPLAY] Section
\color none
 
\color black

\begin_inset LatexCommand label
name "sub:[DISPLAY]-section"

\end_inset


\begin_inset LatexCommand index
name "DISPLAY (inifile section)"

\end_inset


\end_layout

\begin_layout Standard
Different user interface programs use different options, and not every option
 is supported by every user interface.
 The main two interfaces for EMC are AXIS and Touchy.
 Axis is an interface for use with normal computer and monitor, Touchy is
 for use with touch screens.
 Descriptions of the interfaces are in the Interfaces section of the User
 Manual.
\end_layout

\begin_layout Standard

\series bold
\color black
DISPLAY\InsetSpace ~
=\InsetSpace ~
axis
\series default
\color none
 
\color black
The name of the user interface to use.
 Valid options may include:
\end_layout

\begin_layout Itemize
axis
\begin_inset LatexCommand index
name "axis"

\end_inset


\end_layout

\begin_layout Itemize
touchy
\begin_inset LatexCommand index
name "touchy"

\end_inset


\end_layout

\begin_layout Itemize

\color black
keystick
\begin_inset LatexCommand index
name "keystick"

\end_inset


\end_layout

\begin_layout Itemize
mini
\begin_inset LatexCommand index
name "mini"

\end_inset


\end_layout

\begin_layout Itemize

\color black
tkemc
\begin_inset LatexCommand index
name "tkemc"

\end_inset


\end_layout

\begin_layout Itemize

\color black
xemc
\begin_inset LatexCommand index
name "xemc"

\end_inset


\end_layout

\begin_layout Description
POSITION_OFFSET\InsetSpace ~
=\InsetSpace ~
RELATIVE The coordinate system (RELATIVE or MACHINE) to
 show when the user interface starts.
 The RELATIVE coordinate system reflects the G92 and G5x coordinate offsets
 currently in effect.
\end_layout

\begin_layout Description
POSITION_FEEDBACK\InsetSpace ~
=\InsetSpace ~
ACTUAL The coordinate value (COMMANDED or ACTUAL) to show
 when the user interface starts.
 The COMMANDED position is the ideal position requested by EMC.
 The ACTUAL position is the feedback position of the motors.
\end_layout

\begin_layout Description
MAX_FEED_OVERRIDE\InsetSpace ~
=\InsetSpace ~
1.2 The maximum feed override the user may select.
 1.2 means 120% of the programmed feed rate
\end_layout

\begin_layout Description
MIN_SPINDLE_OVERRIDE\InsetSpace ~
=\InsetSpace ~
0.5 The minimum spindle override the user may select.
 0.5 means 50% of the programmed spindle speed.
 (This is useful as it's dangerous to run a program with a too low spindle
 speed).
\end_layout

\begin_layout Description
MAX_SPINDLE_OVERRIDE\InsetSpace ~
=\InsetSpace ~
1.0 The maximum spindle override the user may select.
 1.0 means 100% of the programmed spindle speed
\end_layout

\begin_layout Description
PROGRAM_PREFIX\InsetSpace ~
=\InsetSpace ~
~/emc2/nc_files The default location for g-code files and
 the location for user-defined M-codes
\end_layout

\begin_layout Description
INTRO_GRAPHIC\InsetSpace ~
=\InsetSpace ~
emc2.gif The image shown on the splash screen
\end_layout

\begin_layout Description
INTRO_TIME\InsetSpace ~
=\InsetSpace ~
5 The maximum time to show the splash screen
\end_layout

\begin_layout Description
CYCLE_TIME\InsetSpace ~
=\InsetSpace ~
0.0500 Cycle time in seconds that display will sleep between polls.
\end_layout

\begin_layout Standard
The following [DISPLAY] items are used only if you select AXIS as your user
 interface program.
\end_layout

\begin_layout Description
DEFAULT_LINEAR_VELOCITY\InsetSpace ~
=\InsetSpace ~
.25 The default velocity for linear jogs, in machine
 units per second.
 
\end_layout

\begin_layout Description
MIN_VELOCITY\InsetSpace ~
=\InsetSpace ~
.01 The approximate lowest value the jog slider.
 
\end_layout

\begin_layout Description
MAX_LINEAR_VELOCITY\InsetSpace ~
=\InsetSpace ~
1.0 The maximum velocity for linear jogs, in machine
 units per second.
 
\end_layout

\begin_layout Description
MIN_LINEAR_VELOCITY\InsetSpace ~
=\InsetSpace ~
.01 The approximate lowest value the jog slider.
\end_layout

\begin_layout Description
DEFAULT_ANGULAR_VELOCITY\InsetSpace ~
=\InsetSpace ~
.25 The default velocity for angular jogs, in machine
 units per second.
 
\end_layout

\begin_layout Description
MIN_ANGULAR_VELOCITY\InsetSpace ~
=\InsetSpace ~
.01 The approximate lowest value the jog slider.
\end_layout

\begin_layout Description
MAX_ANGULAR_VELOCITY\InsetSpace ~
=\InsetSpace ~
1.0 The maximum velocity for angular jogs, in machine
 units per second.
 
\end_layout

\begin_layout Description
INCREMENTS\InsetSpace ~
=\InsetSpace ~
1\InsetSpace ~
mm,\InsetSpace ~
.5\InsetSpace ~
in,\InsetSpace ~
...
 Defines the increments available for incremental jogs.
 The INCREMENTS can be used to override the default.
 The values can be decimal numbers (e.g., 0.1000) or fractional numbers (e.g.,
 1/16), optionally followed by a unit (cm, mm, um, inch, in or mil).
 If a unit is not specified the machine unit is assumed.
 Metric and imperial distances may be mixed: INCREMENTS = 1 inch, 1 mil,
 1 cm, 1 mm, 1 um is a valid entry.
\end_layout

\begin_layout Description
OPEN_FILE\InsetSpace ~
=\InsetSpace ~
/full/path/to/file.ngc The file to show in the preview plot when
 AXIS starts.
 Use a blank string "" and no file will be loaded at start up.
\end_layout

\begin_layout Description
EDITOR\InsetSpace ~
=\InsetSpace ~
gedit The editor to use when selecting File > Edit or File Edit Tool
 Table from the AXIS menu.
 This must be configured for these menu items to work.
 Another valid entry is gnome-terminal -e vim.
\end_layout

\begin_layout Description
PYVCP\InsetSpace ~
=\InsetSpace ~
/filename.xml The pyVCP panel description file.
 See the pyVCP section for more information.
\end_layout

\begin_layout Description
LATHE\InsetSpace ~
=\InsetSpace ~
1 This displays in lathe mode with a top view and with Radius and
 Diameter on the DRO.
\end_layout

\begin_layout Description
GEOMETRY\InsetSpace ~
=\InsetSpace ~
XYZABCUVW Controls the preview and backplot of rotary motion.
 This item consists of a sequence of axis letters, optionally preceded by
 a "-" sign.
 Only axes defined in 
\family typewriter
[TRAJ]AXES
\family default
 should be used.
 This sequence specifies the order in which the effect of each axis is applied,
 with a "-" inverting the sense of the rotation.
\newline
The proper GEOMETRY string
 depends on the machine configuration and the kinematics used to control
 it.
 The example string GEOMETRY=XYZBCUVW is for a 5-axis machine where kinematics
 causes UVW to move in the coordinate system of the tool and XYZ to move
 in the coordinate system of the material.
 The order of the letters is important, because it expresses the order in
 which the different transformations are applied.
 For example rotating around C then B is different than rotating around
 B then C.
 Geometry has no effect without a rotary axis.
\end_layout

\begin_layout Description
ARCDIVISION\InsetSpace ~
=\InsetSpace ~
64 Set the quality of preview of arcs.
 Arcs are previewed by dividing them into a number of straight lines; a
 semicircle is divided into 
\series bold
ARCDIVISION
\series default
 parts.
 Larger values give a more accurate preview, but take longer to load and
 result in a more sluggish display.
 Smaller values give a less accurate preview, but take less time to load
 and may result in a faster display.
 The default value of 64 means a circle of up to 3 inches will be displayed
 to within 1 mil (.03%).
\begin_inset Foot
status open

\begin_layout Standard
In emc2.4 and earlier, the default value was 128.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The following [DISPLAY] items are not used if you select AXIS as your user
 interface program.
\end_layout

\begin_layout Description
HELP_FILE\InsetSpace ~
=\InsetSpace ~
tkemc.txt Path to help file (not used in AXIS).
\end_layout

\begin_layout Subsection
[FILTER] Section
\begin_inset LatexCommand index
name "ini [FILTER] Section"

\end_inset


\begin_inset LatexCommand label
name "sub:[FILTER]-Section"

\end_inset

 
\end_layout

\begin_layout Standard
AXIS has the ability to send loaded files through a filter program.
 This filter can do any desired task: Something as simple as making sure
 the file ends with M2, or something as complicated as detecting whether
 the input is a depth image, and generating g-code to mill the shape it
 defines.
 The [FILTER] section of the ini file controls how filters work.
 First, for each type of file, write a PROGRAM_EXTENSION line.
 Then, specify the program to execute for each type of file.
 This program is given the name of the input file as its first argument,
 and must write rs274ngc code to standard output.
 This output is what will be displayed in the text area, previewed in the
 display area, and executed by EMC when Run.
 
\end_layout

\begin_layout Description
PROGRAM_EXTENSION\InsetSpace ~
=\InsetSpace ~
.extension\InsetSpace ~
Description
\end_layout

\begin_layout Standard
If your post processor outputs files in all caps you might want to add the
 following line:
\end_layout

\begin_layout LyX-Code
PROGRAM_EXTENSION = .NGC XYZ Post Processor
\end_layout

\begin_layout Standard
The following lines add support for the image-to-gcode converter included
 with EMC2:
\end_layout

\begin_layout LyX-Code
PROGRAM_EXTENSION = .png,.gif Greyscale Depth Image
\newline
png = image-to-gcode
\newline
gif
 = image-to-gcode
\end_layout

\begin_layout Standard
It is also possible to specify an interpreter:
\end_layout

\begin_layout LyX-Code
PROGRAM_EXTENSION = .py Python Script
\newline
py = python
\end_layout

\begin_layout Standard
In this way, any Python script can be opened, and its output is treated
 as g-code.
 One such example script is available at nc_files/holecircle.py.
 This script creates g-code for drilling a series of holes along the circumferen
ce of a circle.
 Many more g-code generators are on the EMC Wiki site 
\begin_inset LatexCommand url
target "http://wiki.linuxcnc.org/cgi-bin/emcinfo.pl"

\end_inset

.
\end_layout

\begin_layout Standard
If the environment variable AXIS_PROGRESS_BAR is set, then lines written
 to stderr of the form
\end_layout

\begin_layout LyX-Code
FILTER_PROGRESS=%d
\end_layout

\begin_layout Standard
Sets the AXIS progress bar to the given percentage.
 This feature should be used by any filter that runs for a long time.
\end_layout

\begin_layout Subsection
[RS274NGC] Section 
\begin_inset LatexCommand label
name "sub:[RS274NGC]-section"

\end_inset


\begin_inset LatexCommand index
name "RS274NGC (inifile section)"

\end_inset


\end_layout

\begin_layout Description
PARAMETER_FILE
\begin_inset LatexCommand index
name "PARAMETER FILE"

\end_inset

 The file located in the same directory as the ini file which contains the
 parameters used by the interpreter (saved between runs).
 
\end_layout

\begin_layout Standard
Example:
\end_layout

\begin_layout LyX-Code
PARAMETER_FILE = myfile.var
\end_layout

\begin_layout Description

\color black
RS274NGC_STARTUP_CODE
\begin_inset LatexCommand index
name "RS274NGC STARTUP CODE"

\end_inset

 A string of NC codes that the interpreter is initialized with.
 This is not a substitute for specifying modal g-codes at the top of each
 ngc file, because the modal codes of machines differ, and may be changed
 by g-code interpreted earlier in the session.
\end_layout

\begin_layout Standard
Example:
\end_layout

\begin_layout LyX-Code

\color black
RS274NGC_STARTUP_CODE = G20 G90
\end_layout

\begin_layout Description
SUBROUTINE_PATH
\begin_inset LatexCommand index
name "SUBROUTINE PATH"

\end_inset

 Specifies a colon (:) separated list of up to 10 directories to be searched
 when single-file subroutines are specified in gcode.
 These directories are searched after searching [DISPLAY]PROGRAM_PREFIX
 (if it is specified) and before searching [WIZARD]WIZARD_ROOT (if specified).
 The first matching subroutine file found in the search is used.
 Directories are specified relative to the current directory for the inifile
 or as absolute paths.
 The list must contain no intervening whitespace.
\end_layout

\begin_layout Standard
Example:
\end_layout

\begin_layout LyX-Code
SUBROUTINE_PATH = ncsubroutines:/tmp/testsubs:lathesubs:millsubs
\end_layout

\begin_layout Description
USER_M_PATH
\begin_inset LatexCommand index
name "USER M PATH"

\end_inset

 specifies a list of colon (:) separated directories (no intervening whitespace)
 for user defined functions.
 The maximum number of directories is defined at compile time by: USER_DEFINED_F
UNCTION_MAX_DIRS=5.
 Directories are specified relative to the current directory for the inifile
 or as absolute paths.
 The list must contain no intervening whitespace.
 
\end_layout

\begin_layout Standard
Example:
\end_layout

\begin_layout LyX-Code
USER_M_PATH = myfuncs:/tmp/mcodes:experimentalmcodes
\end_layout

\begin_layout Standard
A search is made for each possible user defined function, typically (M100-M199).
 The search order is: 
\end_layout

\begin_layout Enumerate
[DISPLAY]PROGRAM_PREFIX (if specified)
\end_layout

\begin_layout Enumerate
If [DISPLAY]PROGRAM_PREFIX is not specified, search the default location:
 nc_files
\end_layout

\begin_layout Enumerate
Then search each directory in the list [RS274NGC]USER_M_PATH
\end_layout

\begin_layout Standard
The first executable M1xx found in the search is used for each M1xx.
\end_layout

\begin_layout Subsection
[EMCMOT] Section
\color none
 
\color black

\begin_inset LatexCommand label
name "sub:[EMCMOT]-section"

\end_inset


\begin_inset LatexCommand index
name "EMCMOT (inifile section)"

\end_inset


\end_layout

\begin_layout Standard
You may find other entries in this section and they should not be changed.
\end_layout

\begin_layout Description
BASE_PERIOD
\begin_inset LatexCommand index
name "BASE PERIOD"

\end_inset

\InsetSpace ~
=\InsetSpace ~
50000 
\series bold
\noun on
(hal)
\series default
\noun default
 "Base" task period, in nanoseconds - this is the fastest thread in the
 machine.
\newline
On servo-based systems, there is generally no reason for 
\series bold
BASE_PERIOD
\series default
 to be smaller than 
\series bold
SERVO_PERIOD
\series default
.
 
\newline
On machines with software step generation, the 
\series bold
BASE_PERIOD
\series default
 determines the maximum number of steps per second.
 In the absence of long step length and step space requirements, the absolute
 maximum step rate is one step per 
\series bold
BASE_PERIOD
\series default
.
 Thus, the 
\series bold
BASE_PERIOD
\series default
 shown above gives an absolute maximum step rate of 20000 steps per second.
 50000ns is a fairly conservative value.
 The smallest usable value is related to the Latency Test result, the necessary
 step length, and the processor speed.
\newline
Choosing a BASE_PERIOD that is too
 low can lead to the "Unexpected real time delay" message, lockups, or spontaneo
us reboots.
\end_layout

\begin_layout Description
SERVO_PERIOD
\begin_inset LatexCommand index
name "SERVO PERIOD"

\end_inset

\InsetSpace ~
=\InsetSpace ~
1000000 
\series bold
\noun on
(hal)
\series default
\noun default
 "Servo" task period is also in nanoseconds.
 This value will be rounded to an integer multiple of 
\series bold
BASE_PERIOD
\series default
.
 This value is used even on systems based on stepper motors.
\newline
This is the rate
 at which new motor positions are computed, following error is checked,
 PID output values are updated, and so on.
\newline
Most systems will not need to change
 this value.
 It is the update rate of the low level motion planner.
\end_layout

\begin_layout Description
TRAJ_PERIOD
\begin_inset LatexCommand index
name "TRAJ PERIOD"

\end_inset

\InsetSpace ~
=\InsetSpace ~

\series bold
1000000 
\noun on
(hal)
\series default
\noun default
 Trajectory Planner task period in nanoseconds This value will be rounded
 to an integer multiple of 
\series bold
SERVO_PERIOD
\series default
.
\newline
Except for machines with unusual kinematics (e.g., hexapods) there is no reason
 to make this value larger than 
\series bold
SERVO_PERIOD
\series default
.
\end_layout

\begin_layout Subsection
[TASK] Section 
\begin_inset LatexCommand label
name "sub:[TASK]-section"

\end_inset


\begin_inset LatexCommand index
name "TASK (inifile section)"

\end_inset


\end_layout

\begin_layout Description
TASK\InsetSpace ~
=\InsetSpace ~
milltask Specifies the name of the "task" executable.
 "task" does various things, such as communicate with the UIs over NML,
 communicate with the realtime motion planner over non-HAL shared memory,
 and interpret gcode.
 Currently there is only one task executable that makes sense for 99.9% of
 users, milltask In the dim mists of time (before HAL), it was frequently
 the case that an integrator would have to build a modified version of things
 like task, io, and motion for a specific machine.
\end_layout

\begin_layout Description
CYCLE_TIME\InsetSpace ~

\series bold
=
\series default
\InsetSpace ~

\series bold
0.0
\series default
01 The period, in seconds, at which EMCTASK will run.
 This parameter affects the polling interval when waiting for motion to
 complete, when executing a pause instruction, and when accepting a command
 from a user interface.
 There is usually no need to change this number.
\end_layout

\begin_layout Subsection
[HAL] section 
\begin_inset LatexCommand label
name "sub:[HAL]-section"

\end_inset


\begin_inset LatexCommand index
name "HAL (inifile section)"

\end_inset


\end_layout

\begin_layout Description
HALFILE\InsetSpace ~
=\InsetSpace ~
example.hal Execute the file 'example.hal' at start up.
 If 
\series bold
HALFILE
\series default
 is specified multiple times, the files are executed in the order they appear
 in the ini file.
 Almost all configurations will have at least one 
\series bold
HALFILE
\series default
, and stepper systems typically have two such files, one which specifies
 the generic stepper configuration (
\family typewriter
core_stepper.hal
\family default
) and one which specifies the machine pin out (
\family typewriter
xxx_pinout.hal
\family default
)
\end_layout

\begin_layout Description
HALCMD\InsetSpace ~
=\InsetSpace ~
command Execute 'command' as a single hal command.
 If 
\series bold
HALCMD
\series default
 is specified multiple times, the commands are executed in the order they
 appear in the ini file.
 
\series bold
HALCMD
\series default
 lines are executed after all 
\series bold
HALFILE
\series default
 lines.
\end_layout

\begin_layout Description
SHUTDOWN\InsetSpace ~
=\InsetSpace ~
shutdown.hal Execute the file 'shutdown.hal' when EMC is exiting.
 Depending on the hardware drivers used, this may make it possible to set
 outputs to defined values when EMC is exited normally.
 However, because there is no guarantee this file will be executed (for
 instance, in the case of a computer crash) it is not a replacement for
 a proper physical e-stop chain or other protections against software failure.
\end_layout

\begin_layout Description
POSTGUI_HALFILE\InsetSpace ~
=\InsetSpace ~
example2.hal 
\emph on
(Only with the AXIS GUI)
\emph default
 Execute 'example2.hal' after the GUI has created its HAL pins.
 See section 
\begin_inset LatexCommand ref
reference "sec:pyvcp-with-axis"

\end_inset

 for more information.
\end_layout

\begin_layout Subsection
[TRAJ] Section
\color none
 
\color black

\begin_inset LatexCommand label
name "sub:[TRAJ]-section"

\end_inset


\begin_inset LatexCommand index
name "TRAJ (inifile section)"

\end_inset


\end_layout

\begin_layout Standard

\color black
The [TRAJ] section contains general parameters for the trajectory planning
 module in EMCMOT.
\end_layout

\begin_layout Description

\color black
COORDINATES\InsetSpace ~

\series bold
=
\series default
\InsetSpace ~

\series bold
X
\series default
\InsetSpace ~
Y
\series bold
\InsetSpace ~
Z
\series default
\color none
 
\color black
The names of the axes being controlled.
 X, Y, Z, A, B, C, U, V, and W are all valid.
 Only axis named in
\color none
 
\series bold
\color black
COORDINATES
\series default
\color none
 
\color black
are accepted in g-code.
 This has no effect on the mapping from G-code axis names (X- Y- Z-) to
 joint numbers--for "trivial kinematics", X is always joint 0, A is always
 joint 4, and U is always joint 7, and so on.
 It is permitted to write an axis name twice (e.g., X Y Y Z for a gantry machine)
 but this has no effect.
\end_layout

\begin_layout Description

\noun on
\color black
AXES\InsetSpace ~
=\InsetSpace ~
3
\noun default
 One more than the number of the highest joint number in the system.
 For an XYZ machine, the joints are numbered 0, 1 and 2; in this case AXES
 should be 3.
 For an XYUV machine using "trivial kinematics", the V joint is numbered
 7 and therefore AXES should be 8.
 For a machine with nontrivial kinematics (e.g., scarakins) this will generally
 be the number of controlled joints.
\end_layout

\begin_layout Description

\color black
HOME\InsetSpace ~

\series bold
=
\series default
\InsetSpace ~

\series bold
0
\series default
\InsetSpace ~

\series bold
0
\series default
\InsetSpace ~

\series bold
0
\series default
\color none
 
\color black
Coordinates of the homed position of each axis.
 Again for a fourth axis you will need 0 0 0 0.
 This value is only used for machines with nontrivial kinematics.
 On machines with trivial kinematics this value is ignored.
\end_layout

\begin_layout Description

\color black
LINEAR_UNITS\InsetSpace ~
=\InsetSpace ~
<units> 
\begin_inset LatexCommand index
name "LINEAR UNITS"

\end_inset


\color none
 
\color black
Specifies the machine units for linear axes.
 Possible choices are (in, inch, imperial, metric, mm).
 
\newline
This does not affect the linear units in NC code (the G20 and G21 words
 do this).
 
\end_layout

\begin_layout Description

\color black
ANGULAR_UNITS\InsetSpace ~
=\InsetSpace ~
<units> 
\begin_inset LatexCommand index
name "ANGULAR UNITS"

\end_inset

 Specifies the machine units for rotational axes.
 Possible choices are 'deg', 'degree' (360 per circle), 'rad', 'radian'
 (2pi per circle), 'grad', or 'gon' (400 per circle).
\newline
This does not affect
 the angular units of NC code.
 In RS274NGC, A-, B- and C- words are always expressed in degrees.
\end_layout

\begin_layout Description

\color black
DEFAULT_VELOCITY\InsetSpace ~

\series bold
=\InsetSpace ~
0.0167
\series default
\color none
 
\color black
The initial rate for jogs of linear axes, in machine units per second.
 The value shown equals one unit per minute.
\end_layout

\begin_layout Description

\color black
DEFAULT_ACCELERATION\InsetSpace ~

\series bold
=\InsetSpace ~
2.0
\series default
\color none
 
\color black
In machines with nontrivial kinematics, the acceleration used for "teleop"
 (Cartesian space) jogs, in machine units per second per second.
 
\end_layout

\begin_layout Description

\color black
MAX_VELOCITY\InsetSpace ~
=\InsetSpace ~
5.0 
\begin_inset LatexCommand index
name "MAX VELOCITY"

\end_inset


\color none
 
\color black
The maximum velocity for any axis or coordinated move, in machine units
 per second.
 The value shown equals 300 units per minute.
\end_layout

\begin_layout Description

\color black
MAX_ACCELERATION\InsetSpace ~
=\InsetSpace ~
20.0 
\begin_inset LatexCommand index
name "MAX ACCELERATION"

\end_inset


\color none
 
\color black
The maximum acceleration for any axis or coordinated axis move, in machine
 units per second per second.
\end_layout

\begin_layout Description
POSITION_FILE\InsetSpace ~
=\InsetSpace ~
position.txt If set to a non-empty value, the joint positions
 are stored between runs in this file.
 This allows the machine to start with the same coordinates it had on shutdown.
 This assumes there was no movement of the machine while powered off.
 If unset, joint positions are not stored and will begin at 0 each time
 EMC is started.
 This can help on smaller machines without home switches.
\end_layout

\begin_layout Description
NO_FORCE_HOMING\InsetSpace ~
=\InsetSpace ~
1 The default behavior is for EMC to force the user to home
 the machine before any MDI command or a program is run.
 Normally jogging only is allowed before homing.
 Setting NO_FORCE_HOMING = 1 allows the user to make MDI moves and run programs
 without homing the machine first.
 Interfaces without homing ability will need to have this option set to
 1.
 
\series bold

\newline
Warning
\series default
: Using this will allow the machine to run past soft limits while in operation
 and is not generally desirable to allow this.
 
\end_layout

\begin_layout Subsection
[AXIS_<num>] Section
\color none
 
\color black

\begin_inset LatexCommand label
name "sub:[AXIS]-section"

\end_inset


\begin_inset LatexCommand index
name "AXIS (inifile section)"

\end_inset


\end_layout

\begin_layout Standard

\color black
The [AXIS_0], [AXIS_1], etc.
 sections contains general parameters for the individual components in the
 axis control module.
 The axis section names begin numbering at 0, and run through the number
 of axes specified in the [TRAJ] AXES entry minus 1.
\end_layout

\begin_layout Itemize
AXIS_0 = X
\end_layout

\begin_layout Itemize
AXIS_1 = Y
\end_layout

\begin_layout Itemize
AXIS_2 = Z
\end_layout

\begin_layout Itemize
AXIS_3 = A
\end_layout

\begin_layout Itemize
AXIS_4 = B
\end_layout

\begin_layout Itemize
AXIS_5 = C
\end_layout

\begin_layout Itemize
AXIS_6 = U
\end_layout

\begin_layout Itemize
AXIS_7 = V
\end_layout

\begin_layout Itemize
AXIS_8 = W
\end_layout

\begin_layout Description

\color black
TYPE\InsetSpace ~
=\InsetSpace ~
LINEAR The type of axes, either LINEAR or ANGULAR.
\end_layout

\begin_layout Description
WRAPPED_ROTARY\InsetSpace ~
=\InsetSpace ~
1 When this is set to 1 for an ANGULAR axis the axis will
 move 0-359.999 degrees.
 Plus Numbers will move the axis in a positive direction and minus numbers
 will move the axis in the opposite direction.
\end_layout

\begin_layout Description
UNITS
\begin_inset LatexCommand index
name "UNITS"

\end_inset

\InsetSpace ~
=\InsetSpace ~
inch If specified, this setting overrides the related [TRAJ] UNITS setting.
 
\newline
(e.g., [TRAJ]LINEAR_UNITS if the TYPE of this axis is LINEAR, [TRAJ]ANGULAR_UNITS
 if the TYPE of this axis is ANGULAR)
\end_layout

\begin_layout Description
MAX_VELOCITY\InsetSpace ~
=\InsetSpace ~
1.2 Maximum velocity for this axis in machine units per second.
\end_layout

\begin_layout Description
MAX_ACCELERATION\InsetSpace ~

\series bold
=
\series default
\InsetSpace ~

\series bold
20.0
\series default
 Maximum acceleration for this axis in machine units per second squared.
\end_layout

\begin_layout Description
BACKLASH\InsetSpace ~

\series bold
=
\series default
\InsetSpace ~

\series bold
0.000
\series default
 
\begin_inset LatexCommand index
name "Backlash"

\end_inset

Backlash in machine units.
 Backlash compensation value can be used to make up for small deficiencies
 in the hardware used to drive an axis.
 If backlash is added to an axis and you are using steppers the STEPGEN_MAXACCEL
 must be increased to 1.5 to 2 times the MAX_ACCELERATION for the axis.
\end_layout

\begin_layout Description
COMP_FILE\InsetSpace ~
=\InsetSpace ~
file.extension 
\begin_inset LatexCommand index
name "Compensation"

\end_inset

A file holding compensation structure for the axis.
 The file could be named xscrew.comp for example for the X axis.
 File names are case sensitive and can contain letters and or numbers.
 The values are triplets per line separated by a space.
 The first value is nominal (where it should be).
 The second and third values depend on the setting of COMP_FILE_TYPE.
 Currently the limit inside EMC2 is for 256 triplets per axis.
 If COMP_FILE is specified, BACKLASH is ignored.
 Compensation file values are in machine units.
\end_layout

\begin_layout Itemize
COMP_FILE_TYPE=0 the second and third values specify the forward position
 (where the axis is while traveling forward) and reverse position (where
 the axis is while traveling reverse) positions which correspond to the
 nominal position.
 
\end_layout

\begin_layout Itemize
COMP_FILE_TYPE=1 the second and third values specify the forward trim (how
 far from nominal while traveling forward) and the reverse trim (how far
 from nominal while traveling in reverse).
\end_layout

\begin_layout Description
COMP_FILE_TYPE\InsetSpace ~
=\InsetSpace ~
0 For COMP_FILE_TYPE of zero, the values in the compensation
 file are nominal, forward & reverse.
 For COMP_FILE_TYPE of non-zero the values in the compensation file are
 nominal, forward_trim and reverse_trim.
 
\end_layout

\begin_layout Description

\color black
MIN_LIMIT
\begin_inset LatexCommand index
name "MIN LIMIT"

\end_inset

\InsetSpace ~
=\InsetSpace ~

\series bold
-1000
\series default
\color none
 
\color black
The minimum limit (soft limit) for axis motion, in machine units.
 When this limit is exceeded, the controller aborts axis motion.
 
\end_layout

\begin_layout Description

\color black
MAX_LIMIT
\begin_inset LatexCommand index
name "MAX LIMIT"

\end_inset

\InsetSpace ~

\series bold
=\InsetSpace ~
1000
\series default
\color none
 
\color black
The maximum limit (soft limit) for axis motion, in machine units.
 When this limit is exceeded, the controller aborts axis motion.
 
\end_layout

\begin_layout Description
MIN_FERROR
\begin_inset LatexCommand index
name "MIN FERROR"

\end_inset

\InsetSpace ~

\series bold
=
\series default
\InsetSpace ~

\series bold
0.010
\series default
 This is the value in machine units by which the axis is permitted to deviate
 from commanded position at very low speeds.
 If MIN_FERROR is smaller than FERROR, the two produce a ramp of error trip
 points.
 You could think of this as a graph where one dimension is speed and the
 other is permitted following error.
 As speed increases the amount of following error also increases toward
 the FERROR value.
 
\end_layout

\begin_layout Description

\color black
FERROR
\begin_inset LatexCommand index
name "FERROR"

\end_inset

\InsetSpace ~

\series bold
=\InsetSpace ~
1.0
\series default
\color none
 
\color black
FERROR is the maximum allowable following error, in machine units.
 If the difference between commanded and sensed position exceeds this amount,
 the controller disables servo calculations, sets all the outputs to 0.0,
 and disables the amplifiers.
 If MIN_FERROR is present in the .ini file, velocity-proportional following
 errors are used.
 Here, the maximum allowable following error is proportional to the speed,
 with FERROR applying to the rapid rate set by [TRAJ]MAX_VELOCITY, and proportio
nally smaller following errors for slower speeds.
 The maximum allowable following error will always be greater than MIN_FERROR.
 This prevents small following errors for stationary axes from inadvertently
 aborting motion.
 Small following errors will always be present due to vibration, etc.
 The following polarity values determine how inputs are interpreted and
 how outputs are applied.
 They can usually be set via trial-and-error since there are only two possibilit
ies.
 The EMC2 Servo Axis Calibration utility program (in the AXIS interface
 menu Machine/Calibration and in TkEMC it is under Setting/Calibration)
 can be used to set these and more interactively and verify their results
 so that the proper values can be put in the INI file with a minimum of
 trouble.
 
\end_layout

\begin_layout Subsubsection
Homing 
\begin_inset LatexCommand label
name "sub:Homing-related-items"

\end_inset


\end_layout

\begin_layout Standard
These parameters are Homing related, for a better explanation read the Homing
 Section (
\begin_inset LatexCommand ref
reference "sec:Homing"

\end_inset

).
\end_layout

\begin_layout Description
HOME\InsetSpace ~
=\InsetSpace ~
0.0 The position that the joint will go to upon completion of the homing
 sequence.
\end_layout

\begin_layout Description
HOME_OFFSET\InsetSpace ~

\series bold
=\InsetSpace ~
0.0
\series default
 The axis position of the home switch or index pulse, in machine units.
\end_layout

\begin_layout Description
HOME_SEARCH_VEL
\begin_inset LatexCommand index
name "HOME SEARCH VEL"

\end_inset

\InsetSpace ~

\series bold
=
\series default
\InsetSpace ~

\series bold
0.0
\series default
 Initial homing velocity in machine units per second.
 Sign denotes direction of travel.
 A value of zero means assume that the current location is the home position
 for the machine.
 If your machine has no home switches you will want to leave this value
 alone.
\end_layout

\begin_layout Description
HOME_LATCH_VEL\InsetSpace ~

\series bold
=
\series default
\InsetSpace ~

\series bold
0.0
\series default
 Homing velocity in machine units per second to the home switch latch position.
 Sign denotes direction of travel.
\end_layout

\begin_layout Description
HOME_FINAL_VEL\InsetSpace ~
=\InsetSpace ~
0.0 Velocity in machine units per second from home latch position
 to home position.
 If left at 0 or not included in the axis rapid velocity is used.
 Must be a positive number.
\end_layout

\begin_layout Description
HOME_USE_INDEX\InsetSpace ~

\series bold
=
\series default
\InsetSpace ~

\series bold
NO
\series default
 If the encoder used for this axis has an index pulse, and the motion card
 has provision for this signal you may set it to yes.
 When it is yes, it will affect the kind of home pattern used.
 Currently, you can't home to index with steppers unless your using stepgen
 in velocity mode and pid.
\end_layout

\begin_layout Description
HOME_IGNORE_LIMITS\InsetSpace ~

\series bold
=\InsetSpace ~
NO
\series default
 Some machines use a single switch as a home switch and limit switch.
 This variable should be set to yes if the machine configured this way.
\end_layout

\begin_layout Description
HOME_IS_SHARED\InsetSpace ~
=\InsetSpace ~
<n> If the home input is shared by more than one axis set
 <n> to 1 to prevent homing from starting if the one of the shared switches
 is already closed.
 Set <n> to 0 to permit homing if a switch is closed.
\end_layout

\begin_layout Description
HOME_SEQUENCE\InsetSpace ~
=\InsetSpace ~
<n> Used to define the "Home All" sequence.
 <n> starts at 0 and no numbers may be skipped.
 If left out or set to -1 the joint will not be homed by the "Home All"
 function.
 More than one axis can be homed at the same time.
\end_layout

\begin_layout Description
VOLATILE_HOME\InsetSpace ~
=\InsetSpace ~
0 When enabled (set to 1) this joint will be unhomed if the
 Machine Power is off or if E-Stop is on.
 This is useful if your machine has home switches and does not have position
 feedback such as a step and direction driven machine.
\end_layout

\begin_layout Subsubsection
Servo
\begin_inset LatexCommand label
name "sub:Servo-related-items"

\end_inset


\end_layout

\begin_layout Standard
The following items are for servo-based systems and servo-like systems.
 This description assumes that the units of output from the PID component
 are volts.
\end_layout

\begin_layout Description
DEADBAND\InsetSpace ~
=\InsetSpace ~
0.000015 
\series bold
\size footnotesize
(HAL)
\series default
\size default
 How close is close enough the consider the motor in position.
\end_layout

\begin_layout Description
BIAS\InsetSpace ~
=\InsetSpace ~
0.000 
\series bold
\size footnotesize
(HAL)
\series default
\size default
 This is used by hm2-servo and some others.
 Bias is a constant amount that is added to the output.
 In most cases it should be left at zero.
 However, it can sometimes be useful to compensate for offsets in servo
 amplifiers, or to balance the weight of an object that moves vertically.
 bias is turned off when the PID loop is disabled, just like all other component
s of the output.
\end_layout

\begin_layout Description

\color black
P\InsetSpace ~

\series bold
=
\series default
\InsetSpace ~

\series bold
50
\series default
\color none
 
\series bold
\noun on
\color inherit
(hal)
\series default
\noun default
\color none
 
\color black
The proportional gain for the axis servo.
 This value multiplies the error between commanded and actual position in
 machine units, resulting in a contribution to the computed voltage for
 the motor amplifier.
 The units on the P gain are volts per machine unit, e.g., 
\begin_inset Formula $\frac{volt}{mu}$
\end_inset

.
 
\end_layout

\begin_layout Description

\color black
I\InsetSpace ~

\series bold
=\InsetSpace ~
0
\series default
\color none
 
\series bold
\noun on
\color inherit
(hal)
\series default
\noun default
\color none
 
\color black
The integral gain for the axis servo.
 The value multiplies the cumulative error between commanded and actual
 position in machine units, resulting in a contribution to the computed
 voltage for the motor amplifier.
 The units on the I gain are volts per machine unit second, e.g., 
\begin_inset Formula $\frac{volt}{mu\, s}$
\end_inset

.
\end_layout

\begin_layout Description

\color black
D\InsetSpace ~

\series bold
=\InsetSpace ~
0
\series default
\color none
 
\series bold
\noun on
\color inherit
(hal)
\series default
\noun default
\color none
 
\color black
The derivative gain for the axis servo.
 The value multiplies the difference between the current and previous errors,
 resulting in a contribution to the computed voltage for the motor amplifier.
 The units on the D gain are volts per machine unit per second, e.g., 
\begin_inset Formula $\frac{volt}{mu/s}$
\end_inset

.
\end_layout

\begin_layout Description

\color black
FF0\InsetSpace ~

\series bold
=\InsetSpace ~
0
\series default
\color none
 
\series bold
\noun on
\color inherit
(hal)
\series default
\noun default
\color none
 
\color black
The 0th order feed forward gain.
 This number is multiplied by the commanded position, resulting in a contributio
n to the computed voltage for the motor amplifier.
 The units on the FF0 gain are volts per machine unit, e.g., 
\begin_inset Formula $\frac{volt}{mu}$
\end_inset

.
\end_layout

\begin_layout Description

\color black
FF1\InsetSpace ~

\series bold
=\InsetSpace ~
0
\series default
\color none
 
\series bold
\noun on
\color inherit
(hal)
\series default
\noun default
\color none
 
\color black
The 1st order feed forward gain.
 This number is multiplied by the change in commanded position per second,
 resulting in a contribution to the computed voltage for the motor amplifier.
 The units on the FF1 gain are volts per machine unit per second, e.g., 
\begin_inset Formula $\frac{volt}{mu\, s}$
\end_inset

.
\end_layout

\begin_layout Description

\color black
FF2\InsetSpace ~

\series bold
=\InsetSpace ~
0
\series default
\color none
 
\series bold
\noun on
\color inherit
(hal)
\series default
\noun default
\color none
 
\color black
The 2nd order feed forward gain.
 This number is multiplied by the change in commanded position per second
 per second, resulting in a contribution to the computed voltage for the
 motor amplifier.
 The units on the FF2 gain are volts per machine unit per second per second,
 e.g., 
\begin_inset Formula $\frac{volt}{mu\, s^{2}}$
\end_inset

.
\end_layout

\begin_layout Description
OUTPUT_SCALE\InsetSpace ~

\series bold
=
\series default
\InsetSpace ~

\series bold
1.000
\end_layout

\begin_layout Description
OUTPUT_OFFSET\InsetSpace ~
=\InsetSpace ~

\series bold
0.000
\series default
\color none
 
\series bold
\noun on
\color inherit
(hal)
\series default
\noun default
\color none
 
\color black
These two values are the scale and offset factors for the axis output to
 the motor amplifiers.
 The second value (offset) is subtracted from the computed output (in volts),
 and divided by the first value (scale factor), before being written to
 the D/A converters.
 The units on the scale value are in true volts per DAC output volts.
 The units on the offset value are in volts.
 These can be used to linearize a DAC.
 
\newline
Specifically, when writing outputs, the EMC first converts the desired
 output in quasi-SI units to raw actuator values, e.g., volts for an amplifier
 DAC.
 This scaling looks like: 
\begin_inset Formula \[
raw=\frac{{output-offset}}{scale}\]

\end_inset

 The value for scale can be obtained analytically by doing a unit analysis,
 i.e., units are [output SI units]/[actuator units].
 For example, on a machine with a velocity mode amplifier such that 1 volt
 results in 250 mm/sec velocity, 
\begin_inset Formula \[
amplifier[volts]=(output[\frac{mm}{sec}]-offset[\frac{mm}{sec}])/250\frac{mm}{sec\, volt}\]

\end_inset

 Note that the units of the offset are in machine units, e.g., mm/sec, and
 they are pre-subtracted from the sensor readings.
 The value for this offset is obtained by finding the value of your output
 which yields 0.0 for the actuator output.
 If the DAC is linearized, this offset is normally 0.0.
 
\newline
The scale and offset can be used to linearize the DAC as well, resulting
 in values that reflect the combined effects of amplifier gain, DAC non-linearit
y, DAC units, etc.
 To do this, follow this procedure: 
\end_layout

\begin_deeper
\begin_layout Enumerate

\color black
Build a calibration table for the output, driving the DAC with a desired
 voltage and measuring the result.
 See table 
\begin_inset LatexCommand ref
reference "cap:Output-Voltage-Measurements"

\end_inset

 for an example of voltage measurements.
\end_layout

\begin_layout Enumerate

\color black
Do a least-squares linear fit to get coefficients a, b such that
\begin_inset Formula \[
meas=a*raw+b\]

\end_inset


\end_layout

\begin_layout Enumerate

\color black
Note that we want raw output such that our measured result is identical
 to the commanded output.
 This means 
\end_layout

\begin_deeper
\begin_layout Enumerate
\begin_inset Formula \[
cmd=a*raw+b\]

\end_inset


\end_layout

\begin_layout Enumerate
\begin_inset Formula \[
raw=(cmd-b)/a\]

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate

\color black
As a result, the a and b coefficients from the linear fit can be used as
 the scale and offset for the controller directly.
 
\end_layout

\end_deeper
\begin_layout Description

\color black
MAX_OUTPUT\InsetSpace ~

\series bold
=\InsetSpace ~
10 
\noun on
\color inherit
(hal)
\series default
\noun default
\color none
 
\color black
The maximum value for the output of the PID compensation that is written
 to the motor amplifier, in volts.
 The computed output value is clamped to this limit.
 The limit is applied before scaling to raw output units.
 The value is applied symmetrically to both the plus and the minus side.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Standard
\begin_inset LatexCommand label
name "cap:Output-Voltage-Measurements"

\end_inset

Output Voltage Measurements
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features>
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
Raw
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
Measured
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
-10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
-9.93
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
-9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
-8.83
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
-0.03
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
0.96
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
9.87
\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\noun off
\color none
10.87
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description

\color black
INPUT_SCALE
\begin_inset LatexCommand index
name "INPUT SCALE"

\end_inset

\InsetSpace ~
=\InsetSpace ~
20000
\color none
 
\series bold
\noun on
\color inherit
(hal)
\series default
\noun default
 Specifies the number of pulses that corresponds to a move of one machine
 unit as set in the [TRAJ] section.
 For a linear axis one machine unit will be equal to the setting of LINEAR_UNITS.
 For an angular axis one unit is equal to the setting in ANGULAR_UNITS.
\newline
A
 second number, if specified, is ignored.
\color black

\newline
For example, on a 2000 counts per rev encoder
\begin_inset LatexCommand index
name "encoder"

\end_inset

, and 10 revs/inch gearing, and desired units of inch, we have
\begin_inset Formula \begin{eqnarray*}
input\_scale & = & 2000\frac{counts}{rev}*10\frac{rev}{inch}\\
 & = & 20000\frac{counts}{inch}\end{eqnarray*}

\end_inset


\end_layout

\begin_layout Subsubsection
Stepper
\begin_inset LatexCommand label
name "sub:Stepper-related-items"

\end_inset


\end_layout

\begin_layout Standard
The following items are Stepper related items.
\end_layout

\begin_layout Description

\color black
SCALE
\begin_inset LatexCommand index
name "INPUT SCALE"

\end_inset

\InsetSpace ~
=\InsetSpace ~
4000
\color none
 
\series bold
\noun on
\color inherit
(hal)
\series default
\noun default
 Specifies the number of pulses that corresponds to a move of one machine
 unit as set in the [TRAJ] section.
 For stepper systems, this is the number of step pulses issued per machine
 unit.
 For a linear axis one machine unit will be equal to the setting of LINEAR_UNITS.
 For an angular axis one unit is equal to the setting in ANGULAR_UNITS.
 For servo systems, this is the number of feedback pulses per machine unit.
 A second number, if specified, is ignored.
\color black

\newline
For example, on a 1.8 degree stepper motor with half-stepping, and 10 revs/inch
 gearing, and desired machine units of inch, we have
\begin_inset Formula \begin{eqnarray*}
input\_scale & = & \frac{{2\, steps}}{1.8\, degree}*360\frac{{degree}}{rev}*10\frac{rev}{inch}\\
 & = & 4000\frac{steps}{inch}\end{eqnarray*}

\end_inset

Older stepper configuration .ini and .hal used INPUT_SCALE for this value.
\end_layout

\begin_layout Description
STEPGEN_MAXACCEL\InsetSpace ~

\series bold
=\InsetSpace ~
21.0
\series default
 
\series bold
\noun on
(hal)
\series default
\noun default
 Acceleration limit for the step generator.
 This should be 1% to 10% larger than the axis MAX_ACCELERATION.
 This value improves the tuning of stepgen's "position loop".
 If you have added backlash compensation to an axis then this should be
 1.5 to 2 times greater than MAX_ACCELERATION.
\end_layout

\begin_layout Description
STEPGEN_MAXVEL\InsetSpace ~

\series bold
=
\series default
\InsetSpace ~

\series bold
1.4
\series default
 
\series bold
\noun on
(hal)
\series default
\noun default
 Older configuration files have a velocity limit for the step generator
 as well.
 If specified, it should also be 1% to 10% larger than the axis MAX_VELOCITY.
 Subsequent testing has shown that use of STEPGEN_MAXVEL does not improve
 the tuning of stepgen's position loop.
 
\end_layout

\begin_layout Subsection
[EMCIO] Section 
\begin_inset LatexCommand label
name "sub:[EMCIO]-Section"

\end_inset


\begin_inset LatexCommand index
name "EMCIO (inifile section)"

\end_inset


\end_layout

\begin_layout Description
CYCLE_TIME\InsetSpace ~

\series bold
=
\series default
\InsetSpace ~

\series bold
0.100
\series default
 The period, in seconds, at which EMCIO will run.
 Making it 0.0 or a negative number will tell EMCIO not to sleep at all.
 There is usually no need to change this number.
\end_layout

\begin_layout Description
TOOL_TABLE\InsetSpace ~

\series bold
=
\series default
\InsetSpace ~

\series bold
tool.tbl
\series default
 The file which contains tool information, described in the User Manual.
\end_layout

\begin_layout Description
TOOL_CHANGE_POSITION\InsetSpace ~

\series bold
=\InsetSpace ~
0\InsetSpace ~
0\InsetSpace ~
2
\series default
 Specifies the X Y Z location to move to when performing a tool change if
 three digits are used.
 Specifies the X Y Z A B C location when 6 digits are used.
 Specifies the X Y Z A B C U V W location when 9 digits are used.
 Tool Changes can be combined.
 For example if you combine the quill up with change position you can move
 the Z first then the X and Y.
\end_layout

\begin_layout Description
TOOL_CHANGE_WITH_SPINDLE_ON\InsetSpace ~
=\InsetSpace ~
1 The spindle will be left on during the tool
 change when the value is 1.
 Useful for lathes or machines where the material is in the spindle not
 the tool.
\end_layout

\begin_layout Description
TOOL_CHANGE_QUILL_UP\InsetSpace ~
=\InsetSpace ~
1 The Z axis will be moved to machine zero prior to
 the tool change when the value is 1.
 This is the same as issuing a G0 G53 Z0.
\end_layout

\begin_layout Description
TOOL_CHANGE_AT_G30\InsetSpace ~
=\InsetSpace ~
1 The machine is moved to reference point defined by
 parameters 5181-5186 for G30 if the value is 1.
 For more information on G30 and Parameters see the G Code Manual.
\end_layout

\begin_layout Description
RANDOM_TOOLCHANGER\InsetSpace ~
=\InsetSpace ~
1 This is for machines that cannot place the tool back
 into the pocket it came from.
 For example, machines that exchange the tool in the active pocket with
 the tool in the spindle.
\end_layout

\end_body
\end_document
