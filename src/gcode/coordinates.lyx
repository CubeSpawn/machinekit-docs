#LyX 1.5.3 created this file. For more info see http://www.lyx.org/
\lyxformat 276
\begin_document
\begin_header
\textclass book
\begin_preamble
\usepackage{a4}
\end_preamble
\language english
\inputencoding default
\font_roman bookman
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\float_placement !!h
\paperfontsize 10
\spacing single
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 5
\tocdepth 5
\paragraph_separation skip
\defskip smallskip
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Chapter
Coordinate System
\begin_inset LatexCommand index
name "Coordinate System"

\end_inset


\begin_inset LatexCommand label
name "cha:Coordinate-System"

\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Standard
You have seen how handy a tool length offset can be.
 Having this allows the programmer to ignore the actual tool length when
 writing a part program.
 In the same way, it is really nice to be able to find a prominent part
 of a casting or block of material and work a program from that point rather
 than having to take account of the location at which the casting or block
 will be held during the machining.
\end_layout

\begin_layout Standard
This chapter introduces you to offsets as they are used by the EMC.
 These include;
\end_layout

\begin_layout Itemize
machine coordinates (G53) 
\end_layout

\begin_layout Itemize
nine fixture offsets (G54-G59.3) 
\end_layout

\begin_layout Itemize
global offsets (G92)
\end_layout

\begin_layout Section
The Machine Position Command (G53)
\end_layout

\begin_layout Standard
Regardless of any offsets that may be in effect, putting a G53 in a block
 of code tells the interpreter to go to the real or absolute axis positions
 commanded in the block.
 For example
\end_layout

\begin_layout Quote
g53 g0 x0 y0 z0 
\end_layout

\begin_layout Standard
will get you to the actual position where these three axes are zero.
 You might use a command like this if you have a favorite position for tool
 changes or if your machine has an auto tool changer.
 You might also use this command to get the tool out of the way so that
 you can rotate or change a part in a vice.
 
\end_layout

\begin_layout Standard
G53 is not a modal command.
 It must be used on each line where motion based upon absolute machine position
 is desired.
 
\end_layout

\begin_layout Section
Fixture Offsets (G54-G59.3)
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename images/offsets.png
	display color
	width 80text%

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Caption

\begin_layout Standard
Fixture Offsets
\begin_inset LatexCommand label
name "cap:Fixture-Offsets"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Work or fixture offset are used to make a part home that is different from
 the absolute, machine coordinate system.
 This allows the part programmer to set up home positions for multiple parts.
 A typical operation that uses fixture offsets would be to mill multiple
 copies of parts on multiple part holders or vises.
\end_layout

\begin_layout Standard
The values for offsets are stored in the VAR file that is requested by the
 INI file during the startup of an EMC.
 In our example below we'll use 
\begin_inset LatexCommand index
name "G55"

\end_inset

G55.
 The values for each axis for G55 are stored as variable numbers.
 
\end_layout

\begin_layout Quote
5241\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
 0.000000
\end_layout

\begin_layout Quote
5242\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
 0.000000
\end_layout

\begin_layout Quote
5243\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
 0.000000
\end_layout

\begin_layout Quote
5244\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
 0.000000
\end_layout

\begin_layout Quote
5245\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
 0.000000
\end_layout

\begin_layout Quote
5246\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
 0.000000
\end_layout

\begin_layout Standard
In the VAR file scheme, the first variable number stores the X offset, the
 second the Y offset and so on for all six axes.
 There are numbered sets like this for each of the fixture offsets.
 
\end_layout

\begin_layout Standard
Each of the graphical interfaces has a way to set values for these offsets.
 You can also set these values by editing the VAR file itself and then issuing
 a [reset] so that the EMC reads the new values.
 For our example let's directly edit the file so that G55 takes on the following
 values.
\end_layout

\begin_layout Quote
5241\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
 2.000000
\end_layout

\begin_layout Quote
5242\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
 1.000000
\end_layout

\begin_layout Quote
5243\InsetSpace ~
\InsetSpace ~
 -2.000000
\end_layout

\begin_layout Quote
5244\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
 0.000000
\end_layout

\begin_layout Quote
5245\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
 0.000000
\end_layout

\begin_layout Quote
5246\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
 0.000000
\end_layout

\begin_layout Standard
You should read this as moving the zero positions of G55 to X = 2 units,
 Y= 1 unit, and Z = -2 units away from the absolute zero position.
\end_layout

\begin_layout Standard
Once there are values assigned, a call to G55 in a program block would shift
 the zero reference by the values stored.
 The following line would then move each axis to the new zero position.
 Unlike G53, G54 through G59.3 are modal commands.
 They will act on all blocks of code after one of them has been set.
 The program that might be run using figure 
\begin_inset LatexCommand ref
reference "cap:Fixture-Offsets"

\end_inset

 would require only a single coordinate reference for each of the locations
 and all of the work to be done there.
 The following code is offered as an example of making a square using the
 G55 offsets that we set above.
\end_layout

\begin_layout Quote
G55 G0 x0 y0 z0
\end_layout

\begin_layout Quote
g1 f2 z-0.2000
\end_layout

\begin_layout Quote
x1
\end_layout

\begin_layout Quote
y1
\end_layout

\begin_layout Quote
x0
\end_layout

\begin_layout Quote
y0
\end_layout

\begin_layout Quote
g0 z0
\end_layout

\begin_layout Quote
g54 x0 y0 z0
\end_layout

\begin_layout Quote
m2
\end_layout

\begin_layout Standard
"But," you say, "why is there a G54 in there near the end." Many programmers
 leave the G54 coordinate system with all zero values so that there is a
 modal code for the absolute machine based axis positions.
 This program assumes that we have done that and use the ending command
 as a command to machine zero.
 It would have been possible to use g53 and arrive at the same place but
 that command would not have been modal and any commands issued after it
 would have returned to using the G55 offsets because that coordinate system
 would still be in effect.
\end_layout

\begin_layout Quote
\begin_inset LatexCommand index
name "G54"

\end_inset

G54\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
use preset work coordinate system 1
\end_layout

\begin_layout Quote
\begin_inset LatexCommand index
name "G55"

\end_inset

G55\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
use preset work coordinate system 2
\end_layout

\begin_layout Quote
\begin_inset LatexCommand index
name "G56"

\end_inset

G56\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
use preset work coordinate system 3
\end_layout

\begin_layout Quote
\begin_inset LatexCommand index
name "G57"

\end_inset

G57\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
use preset work coordinate system 4
\end_layout

\begin_layout Quote
\begin_inset LatexCommand index
name "G58"

\end_inset

G58\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
use preset work coordinate system 5
\end_layout

\begin_layout Quote
\begin_inset LatexCommand index
name "G59"

\end_inset

G59\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
use preset work coordinate system 6
\end_layout

\begin_layout Quote
G59.1
\begin_inset LatexCommand index
name "G59.1"

\end_inset

\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
use preset work coordinate system 7
\end_layout

\begin_layout Quote
G59.2
\begin_inset LatexCommand index
name "G59.2"

\end_inset

\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
use preset work coordinate system 8
\end_layout

\begin_layout Quote
G59.3
\begin_inset LatexCommand index
name "G59.3"

\end_inset

\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
use preset work coordinate system 9
\end_layout

\begin_layout Subsection
Default coordinate system
\end_layout

\begin_layout Standard
One other variable in the VAR file becomes important when we think about
 offset systems.
 This variable is named 5220.
 In the default files its value is set to 1.00000.
 This means that when the EMC starts up it should use the first coordinate
 system as its default.
 If you set this to 9.00000 it would use the nineth offset system as its
 default for startup and reset.
 Any value other than an interger (decimal really) between 1 and 9, or a
 missing 5220 variable will cause the EMC to revert to the default value
 of 1.00000 on startup.
 
\end_layout

\begin_layout Subsection
Setting coordinate system values within G-code.
\end_layout

\begin_layout Standard
In the general programming chapter we listed a G10 command word.
 This command can be used to change the values of the offsets in a coordinate
 system.
 (add here)
\end_layout

\begin_layout Section
G92
\begin_inset LatexCommand index
name "G92"

\end_inset

 Offsets
\begin_inset LatexCommand label
name "sec:G92-Offsets"

\end_inset


\end_layout

\begin_layout Standard
The way that it works has changed just a bit from the early days to the
 current releases.
 It should be thought of as a temporary offset that is applied to all other
 offsets.
 
\end_layout

\begin_layout Subsection
The G92 commands
\end_layout

\begin_layout Standard
This set of commands include;
\end_layout

\begin_layout Description
G92 This command, when used with axis names, sets values to offset variables.
\end_layout

\begin_layout Description
G92.1
\begin_inset LatexCommand index
name "G92.1"

\end_inset

 This command sets zero values to the g92 variables.
\end_layout

\begin_layout Description
G92.2
\begin_inset LatexCommand index
name "G92.2"

\end_inset

 This command suspends but does not zero out the g92 variables.
\end_layout

\begin_layout Description
G92.3
\begin_inset LatexCommand index
name "G92.3"

\end_inset

 This command applies offset values that have been suspended.
\end_layout

\begin_layout Standard
When the commands are used as described above, they will work pretty much
 as you would expect.
\end_layout

\begin_layout Quote
A user must understand the correct ways that the g92 values work.
 They are set based upon the location of each axis when the g92 command
 is invoked.
 The NIST document is clear that, "To make the
\noun on
 
\noun default
current point have the coordinates" x0, y0, and z0 you would use g92 x0
 y0 z0.
 G92 
\emph on
does not work from absolute machine coordinates
\emph default
.
 It works from 
\emph on
current location
\emph default
.
 
\end_layout

\begin_layout Quote
G92 also works from current location as modified by any other offsets that
 are in effect when the g92 command is invoked.
 While testing for differences between work offsets and actual offsets it
 was found that a g54 offset could cancel out a g92 and thus give the appearance
 that no offsets were in effect.
 However, the g92 was still in effect for all coordinates and did produce
 expected work offsets for the other coordinate systems.
 
\end_layout

\begin_layout Quote
It is likely that the absence of home switches and proper home procedures
 will result in very large errors in the application of g92 values if they
 exist in the var file.
 Many EMC users do not have home switches in place on their machines.
 For them home should be found by moving each axis to a location and issuing
 the home command.
 When each axis is in a known location, the home command will recalculate
 how the g92 values are applied and will produce consistent results.
 Without a home sequence, the values are applied to the position of the
 machine when the EMC begins to run.
\end_layout

\begin_layout Subsection
Setting G92 values
\end_layout

\begin_layout Standard
There are at least two ways to set G92 values.
\end_layout

\begin_layout Itemize
right mouse click on position displays of tkemc will popup a window into
 which you can type a value.
 
\end_layout

\begin_layout Itemize
the g92 command
\end_layout

\begin_layout Standard
Both of these work from the current location of the axis to which the offset
 is to be applied.
 
\end_layout

\begin_layout Quote
Issuing g92 x y z a b c does in fact set values to the g92 variables such
 that each axis takes on the value associated with its name.
 These values are assigned to the current position of the machine axis.
 These results satisfy paragraphs one and two of the NIST document.
\end_layout

\begin_layout Quote
G92 commands work from current axis location and add and subtract correctly
 to give the current axis position the value assigned by the g92 command.
 The effects work even though previous offsets are in.
\end_layout

\begin_layout Standard
So if the X axis is currently showing 2.0000 as its position a G92 x0 will
 set an offset of -2.0000 so that the current location of X becomes zero.
 A G92 X2 will set an offset of 0.0000 and the displayed position will not
 change.
 A G92 X5.0000 will set an offset of 3.0000 so that the current displayed
 position becomes 5.0000.
 
\end_layout

\begin_layout Subsection
G92 Cautions
\end_layout

\begin_layout Standard
Sometimes the values of a G92 offset will remain in the VAR file.
 This can happen when a file is aborted during processing that has G92 offsets
 in effect.
 When this happens reset or a startup will cause them to become active again.
 The variables are named 
\end_layout

\begin_layout Quote
5211\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
 0.000000
\end_layout

\begin_layout Quote
5212\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
 0.000000
\end_layout

\begin_layout Quote
5213\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
 0.000000
\end_layout

\begin_layout Quote
5214\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
 0.000000
\end_layout

\begin_layout Quote
5215\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
 0.000000
\end_layout

\begin_layout Quote
5216\InsetSpace ~
\InsetSpace ~
\InsetSpace ~
 0.000000
\end_layout

\begin_layout Standard
where 5211 is the X axis offset and so on.
 If you are seeing unexpected positions as the result of a commanded move,
 as a result of storing an offset in a previous progam and not clearing
 them at the end then issue a G92.1 in the MDI widow to clear the stored
 offsets.
\end_layout

\begin_layout Standard
If G92 values exist in the VAR file when the EMC starts up the g92 values
 in the var file is that it will apply the values to current location of
 each axis.
 If this is home position and home position is set as machine zero everything
 will be correct.
 Once home has been established using real machine switches or moving each
 axis to a known home position and issuing an axis home command any G92
 offsets will be applied.
 If you have a G92 X1 in effect when you home the X axis the DRO will read
 "X: 1.000" instead of the expected "X: 0.000" because the G92 was applied
 to the machine origin.
 If you issue a G92.1 and the DRO now reads all zeros then you had a G92
 offset in effect when you last ran EMC.
\end_layout

\begin_layout Standard
Unless your intention is to use the same G92 offsets in the next program
 best practice is to issue a G92.1 at the end of any G Code files where you
 use G92 offsets.
\end_layout

\begin_layout Section
Sample Program Using Offsets
\end_layout

\begin_layout Standard
This sample engraving project mills a set of four .1 radius circles in roughly
 a star shape around a center circle.
 We can setup the individual circle pattern like this.
\end_layout

\begin_layout Quote
\noindent
G10 L2 P1 x0 y0 z0 (ensure that g54 is set to machine zero) 
\end_layout

\begin_layout Quote
\noindent
g0 x-.1 y0 z0
\end_layout

\begin_layout Quote
\noindent
g1 f1 z-.25
\end_layout

\begin_layout Quote
\noindent
g3 x-.1 y0 i.1 j0
\end_layout

\begin_layout Quote
\noindent
g0 z0
\end_layout

\begin_layout Quote
m2
\end_layout

\begin_layout Standard
We can issue a set of commands to create offsets for the four other circles
 like this.
\end_layout

\begin_layout Quote
G10 L2 P2 x0.5 (offsets g55 x value by 0.5 inch) 
\end_layout

\begin_layout Quote
G10 L2 P3 x-0.5 (offsets g56 x value by -0.5 inch) 
\end_layout

\begin_layout Quote
G10 L2 P4 y0.5 (offsets g57 y value by 0.5 inch) 
\end_layout

\begin_layout Quote
G10 L2 P5 y-0.5 (offsets g58 y value by -0.5 inch) 
\end_layout

\begin_layout Standard
We put these together in the following program.
\end_layout

\begin_layout Quote
(a program for milling five small circles in a diamond shape)
\end_layout

\begin_layout Quote
G10 L2 P1 x0 y0 z0 (ensure that g54 is machine zero)
\end_layout

\begin_layout Quote
G10 L2 P2 x0.5 (offsets g55 x value by 0.5 inch) 
\end_layout

\begin_layout Quote
G10 L2 P3 x-0.5 (offsets g56 x value by -0.5 inch) 
\end_layout

\begin_layout Quote
G10 L2 P4 y0.5 (offsets g57 y value by 0.5 inch) 
\end_layout

\begin_layout Quote
G10 L2 P5 y-0.5 (offsets g58 y value by -0.5 inch)
\end_layout

\begin_layout Quote
g54 g0 x-.1 y0 z0 (center circle)
\end_layout

\begin_layout Quote
g1 f1 z-.25
\end_layout

\begin_layout Quote
g3 x-.1 y0 i.1 j0
\end_layout

\begin_layout Quote
g0 z0
\end_layout

\begin_layout Quote
g55 g0 x-.1 y0 z0 (first offset circle)
\end_layout

\begin_layout Quote
g1 f1 z-.25
\end_layout

\begin_layout Quote
g3 x-.1 y0 i.1 j0
\end_layout

\begin_layout Quote
g0 z0
\end_layout

\begin_layout Quote
g56 g0 x-.1 y0 z0 (second offset circle)
\end_layout

\begin_layout Quote
g1 f1 z-.25
\end_layout

\begin_layout Quote
g3 x-.1 y0 i.1 j0
\end_layout

\begin_layout Quote
g0 z0
\end_layout

\begin_layout Quote
g57 g0 x-.1 y0 z0 (third offset circle)
\end_layout

\begin_layout Quote
g1 f1 z-.25
\end_layout

\begin_layout Quote
g3 x-.1 y0 i.1 j0
\end_layout

\begin_layout Quote
g0 z0
\end_layout

\begin_layout Quote
g58 g0 x-.1 y0 z0 (fourth offset circle)
\end_layout

\begin_layout Quote
g1 f1 z-.25
\end_layout

\begin_layout Quote
g3 x-.1 y0 i.1 j0
\end_layout

\begin_layout Quote
g54 g0 x0 y0 z0
\end_layout

\begin_layout Quote
m2
\end_layout

\begin_layout Standard
Now comes the time when we might apply a set of G92 offsets to this program.
 You'll see that it is running in each case at z0.
 If the mill were at the zero position, a g92 z1.0000 issued at the head
 of the program would shift everything down an inch.
 You might also shift the whole pattern around in the XY plane by adding
 some x and y offsets with g92.
 If you do this you should add a G92.1 command just before the m2 that ends
 the program.
 If you do not, other programs that you might run after this one will also
 use that g92 offset.
 Furthermore it would save the g92 values when you shut down the EMC and
 they will be recalled when you start up again.
\end_layout

\end_body
\end_document
