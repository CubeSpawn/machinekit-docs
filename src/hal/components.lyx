#LyX 1.5.3 created this file. For more info see http://www.lyx.org/
\lyxformat 276
\begin_document
\begin_header
\textclass book
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\paperfontsize default
\spacing single
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Chapter
HAL Components
\begin_inset LatexCommand label
name "cha:HAL-Components"

\end_inset


\end_layout

\begin_layout Section
Commands and Userspace Components
\begin_inset LatexCommand label
name "sec:Commands-and-Userspace-Components"

\end_inset


\end_layout

\begin_layout Standard
Some of these will have expanded descriptions from the man pages.
 Some will have limited descriptions.
 All of the components have man pages.
 From this list you know what components exist and can use man n name to
 get additional information.
 For example in a terminal window type
\end_layout

\begin_layout LyX-Code
man 1 axis 
\end_layout

\begin_layout Standard
to view the information in the man page.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
axis-remote.1 = AXIS Remote Interface
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
axis.1 = AXIS EMC (The Enhanced Machine Controller) Graphical User Interface
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
bfload.1 = A program for loading a Xilinx Bitfile program into the FPGA of
 an Anything I/O board from Mesa
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
comp.1 = Build, compile and install EMC HAL components
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
emc.1 = EMC (The Enhanced Machine Controller)
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
hal_input.1 = control HAL pins with any Linux input device, including USB
 HID devices
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
halcmd.1 = manipulate the Enhanced Machine Controller HAL from the command
 line
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
halmeter.1 = observe HAL pins, signals, and parameters
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
halrun.1 = manipulate the Enhanced Machine Controller HAL from the command
 line
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
halsampler.1 = sample data from HAL in realtime
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
halstreamer.1 = stream file data into HAL in real time
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
halui.1 = observe HAL pins and command EMC through NML
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
io.1 = accepts NML I/O commands, interacts with HAL in userspace
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
iocontrol.1 = accepts NML I/O commands, interacts with HAL in userspace
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
pyvcp.1 = Virtual Control Panel for EMC2
\end_layout

\begin_layout Section
Realtime Components
\begin_inset LatexCommand label
name "sec:Realtime-Components"

\end_inset


\end_layout

\begin_layout Standard
Some of these will have expanded descriptions from the man pages.
 Some will have limited descriptions.
 All of the components have man pages.
 From this list you know what components exist and can use man n name to
 get additional information in a terminal window.
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
abs.9 = Compute the absolute value and sign of the input signal
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
and2.9 = Two-input AND gate
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
at_pid.9 = proportional/integral/derivative controller with auto tuning
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
axis.9 = accepts NML motion commands, interacts with HAL in realtime
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
biquad.9 = Biquad IIR filter
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
blend.9 = Perform linear interpolation between two values
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
charge_pump.9 = Create a square-wave for the "charge pump" input of some
 controller boards
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
clarke2.9 = Two input version of Clarke transform
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
clarke3.9 = Clarke (3 phase to cartesian) transform
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
clarkeinv.9 = Inverse Clarke transform
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
classicladder.9 = Realtime software plc based on ladder logic
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
comp.9 = Two input comparator with hysteresis
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
constant.9 = Use a parameter to set the value of a pin
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
conv_bit_s32.9 = Convert a value from bit to s32
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
conv_bit_u32.9 = Convert a value from bit to u32
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
conv_float_s32.9 = Convert a value from float to s32
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
conv_float_u32.9 = Convert a value from float to u32
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
conv_s32_bit.9 = Convert a value from s32 to bit
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
conv_s32_float.9 = Convert a value from u32 to bit
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
conv_s32_u32.9 = Convert a value from s32 to u32
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
conv_u32_bit.9 = Convert a value from u32 to bit
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
conv_u32_float.9 = Convert a value from u32 to float
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
conv_u32_s32.9 = Convert a value from u32 to s32
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
counter.9 = counts input pulses (deprecated)
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
ddt.9 = Compute the derivative of the input function
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
deadzone.9 = Return the center if within the threshold
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
debounce.9 = filter noisy digital inputs, for more information see 
\begin_inset LatexCommand ref
reference "sec:Debounce"

\end_inset


\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
edge.9 = Edge detector
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
encoder.9 = software counting of quadrature encoder signals, for more information
 see 
\begin_inset LatexCommand ref
reference "sec:Encoder"

\end_inset


\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
encoder_ratio.9 = an electronic gear to synchronize two axes
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
estop_latch.9 = ESTOP latch
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
flipflop.9 = D type flip-flop
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
freqgen.9 = software step pulse generation
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
gearchange.9 = Select from one two speed ranges
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
genhexkins.9 = kinematics definitions for emc2
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
hm2_7i43.9 = HAL driver for the Mesa Electronics 7i43 EPP Anything IO board
 with HostMot2
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
hm2_pci.9 = HAL driver for the Mesa Electronics 5i20, 5i22, 5i23, 4i65, and
 4i68 Anything IO boards, with HostMot2 firmware
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
hostmot2 = HAL driver for the Mesa Electronics HostMot2 firmware
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
hypot.9 = Three-input hypotenuse (Euclidean distance) calculator
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
ilowpass.9 = Low-pass filter with integer inputs and outputs
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
integ.9 = Integrator
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
kins.9 = kinematics definitions for emc2
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
knob2float.9 = Convert counts (probably from an encoder) to a float value
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
limit1.9 = Limit the output signal to fall between min and max
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
limit2.9 = Limit the output signal to fall between min and max
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
limit3.9 = Limit the output signal to fall between min and max
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
logic.9 = Experimental general `logic function' component
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
lowpass.9 = Low-pass filter
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
lut5.9 = Arbitrary 5-input logic function based on a look-up table
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
maj3.9 = Compute the majority of 3 inputs
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
match8.9 = 8-bit binary match detector
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
minmax.9 = Track the minimum and maximum values of the input to the outputs
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
motion.9 = accepts NML motion commands, interacts with HAL in realtime
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
mult2.9 = Product of two inputs
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
mux2.9
\begin_inset LatexCommand index
name "mux2.9"

\end_inset

 = Select from one of two input values
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
mux4.9
\begin_inset LatexCommand index
name "mux4.9"

\end_inset

 = Select from one of four input values
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
mux8.9 = Select from one of eight input values
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
near.9 = Determine whether two values are roughly equal
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
not.9
\begin_inset LatexCommand index
name "not.9"

\end_inset

 = Inverter
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
offset.9
\begin_inset LatexCommand index
name "offset.9"

\end_inset

 = Adds an offset to an input, and subtracts it from the feedback value
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
oneshot.9
\begin_inset LatexCommand index
name "oneshot.9 "

\end_inset

= one-shot pulse generator
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
or2.9
\begin_inset LatexCommand index
name "or2.9"

\end_inset

 = Two-input OR gate
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
pid.9
\begin_inset LatexCommand index
name "pid.9"

\end_inset

 = proportional/integral/derivative controller, for more information see
 
\begin_inset LatexCommand ref
reference "sec:PID"

\end_inset


\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
pluto_servo.9 = Hardware driver and firmware for the Pluto-P parallel-port
 FPGA, for use with servos
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
pluto_step.9 = Hardware driver and firmware for the Pluto-P parallel-port
 FPGA, for use with steppers
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
pwmgen.9 = software PWM/PDM generation, for more information see 
\begin_inset LatexCommand ref
reference "sec:PWMgen"

\end_inset


\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
rotatekins.9 = kinematics definitions for emc2
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
sample_hold.9 = Sample and Hold
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
sampler.9 = sample data from HAL in real time
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
scale.9 = 
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
select8.9 = 8-bit binary match detector
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
serport.9 = Hardware driver for the digital I/O bits of the 8250 and 16550
 serial port
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
siggen.9 = signal generator, for more information see 
\begin_inset LatexCommand ref
reference "sec:Siggen"

\end_inset


\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
sim_encoder.9 = simulated quadrature encoder, for more information see 
\begin_inset LatexCommand ref
reference "sec:Simulated-Encoder"

\end_inset


\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
stepgen.9 = software step pulse generation, for more information see 
\begin_inset LatexCommand ref
reference "sec:Stepgen"

\end_inset


\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
steptest.9 = Used by Stepconf to allow testing of acceleration and velocity
 values for an axis
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
streamer.9 = stream file data into HAL in real time
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
sum2.9 = Sum of two inputs (each with a gain) and an offset
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
supply.9 = set output pins with values from parameters (deprecated)
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
threads.9 = creates hard realtime HAL threads
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
threadtest.9 = 
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
timedelay.9 = The equivalent of a time-delay relay
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
timedelta.9 = 
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
toggle.9 = push-on, push-off from momentary pushbuttons
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
toggle2nist.9 = toggle button to nist logic
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
tripodkins.9 = kinematics definitions for emc2
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
tristate_bit.9 = Place a signal on an I/O pin only when enabled, similar
 to a tristate buffer in electronics
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
tristate_float.9 = Place a signal on an I/O pin only when enabled, similar
 to a tristate buffer in electronics
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
trivkins.9 = kinematics definitions for emc2
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
updown.9 = Counts up or down, with optional limits and wraparound behavior
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
wcomp.9 = Window comparator
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
weighted_sum.9 = convert a group of bits to an integer
\end_layout

\begin_layout List
\labelwidthstring 00.00.0000
xor2.9 = Two-input XOR (exclusive OR) gate
\end_layout

\end_body
\end_document
